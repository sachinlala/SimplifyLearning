/**
 * Configuration for Count and Say Algorithm Demo
 */

const config = {
    name: "Count and Say",
    title: "Count and Say Algorithm Demo",
    category: "patterns",
    problem: "Generate the nth term of the Count and Say sequence by reading and describing the digits of the previous term.",
    cssPath: "../../../assets/css/styles.css",
    jsPath: "count-and-say.js",
    githubPath: "https://github.com/sachinlala/SimplifyLearning/blob/main/algorithms-js/src/patterns/count-and-say/count-and-say.js",
    algorithmFunction: "generateCountAndSay",
    
    inputs: [
        {
            id: "starting-number",
            type: "number",
            label: "Starting Number",
            min: 1,
            max: 9,
            defaultValue: 1,
            width: "80px"
        },
        {
            id: "row-number",
            type: "number",
            label: "Row Number (max 40)",
            min: 0,
            max: 40,
            defaultValue: 5,
            width: "80px"
        }
    ],
    
    example: "Starting with 1, row 1 = \"11\", row 2 = \"21\", row 3 = \"1211\"...",
    
    explanation: {
        description: "The Count and Say sequence is generated by reading the previous number and describing what you see:",
        steps: [
            "1 → \"one 1\" → 11",
            "11 → \"two 1s\" → 21", 
            "21 → \"one 2, one 1\" → 1211",
            "1211 → \"one 1, one 2, two 1s\" → 111221"
        ]
    },
    
    customDemoFunction: `
        function runDemo() {
            const startingNumber = parseInt(document.getElementById('starting-number').value);
            const rowNumber = parseInt(document.getElementById('row-number').value);
            const resultContainer = document.getElementById('result');
            const errorContainer = document.getElementById('error-message');
            
            // Clear previous error
            errorContainer.innerHTML = '';
            errorContainer.style.display = 'none';
            
            // Validate inputs
            if (startingNumber <= 0) {
                showError('Starting number must be positive');
                return;
            }
            
            if (rowNumber < 0) {
                showError('Row number must be non-negative');
                return;
            }
            
            if (rowNumber > 40) {
                showError('Row number too large (max 40): may cause out-of-memory error');
                return;
            }
            
            try {
                const result = generateCountAndSay(startingNumber, rowNumber);
                resultContainer.innerHTML = \`<strong>Row \${rowNumber} starting with \${startingNumber}:</strong><br>\${wrapLongText(result)}\`;
            } catch (error) {
                showError(error.message);
            }
        }`
};

// Export for both Node.js and browser environments
if (typeof module !== 'undefined' && module.exports) {
    module.exports = config;
} else if (typeof window !== 'undefined') {
    window.countAndSayConfig = config;
}
